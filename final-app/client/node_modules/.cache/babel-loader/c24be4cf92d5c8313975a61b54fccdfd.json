{"ast":null,"code":"import _classCallCheck from \"/Users/michaelnunzio/Desktop/finalProject/final-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelnunzio/Desktop/finalProject/final-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaelnunzio/Desktop/finalProject/final-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaelnunzio/Desktop/finalProject/final-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaelnunzio/Desktop/finalProject/final-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michaelnunzio/Desktop/finalProject/final-app/client/src/component/jobCards/JobCard.js\";\nimport React, { Component } from 'react';\nimport Buttons from './Buttons';\nimport CardDeck from './CardDeck';\nimport Title from \"./Title\";\nimport axios from 'axios';\nimport NavBar from \"../navbar/navbar\";\nvar IMAGE_URLS = [{\n  \"company\": \"Amazon\",\n  \"description\": \"web developer\",\n  \"requirements\": \"Strong Proficiency in Javascript, including DOM Manipulation and the JavaScript Object Model. Thorough understanding of React.js and its core principles. Familiarity with newer specifications of ECMAScript. Knowledge of isomorphic React is a plus. Familiarity with Modern front-end build pipelines and tools. Experience with Data Structure libraries (e.g Immutable.js). Working Knowledge of GitHub. Experience with REST API’s. Knowledge of Modern Authorization mechanisms, such as JSON Web Token and OAuth. The desire to jump into Full Stack Development when necessary\"\n}, {\n  \"company\": \"Google\",\n  \"description\": \"web developer\",\n  \"requirements\": \"Strong Proficiency in Javascript, including DOM Manipulation and the JavaScript Object Model. Thorough understanding of React.js and its core principles. Familiarity with newer specifications of ECMAScript. Knowledge of isomorphic React is a plus. Familiarity with Modern front-end build pipelines and tools. Experience with Data Structure libraries (e.g Immutable.js). Working Knowledge of GitHub. Experience with REST API’s. Knowledge of Modern Authorization mechanisms, such as JSON Web Token and OAuth. The desire to jump into Full Stack Development when necessary\"\n}, {\n  \"company\": \"Walmart\",\n  \"description\": \"web developer\",\n  \"requirements\": \"Strong Proficiency in Javascript, including DOM Manipulation and the JavaScript Object Model. Thorough understanding of React.js and its core principles. Familiarity with newer specifications of ECMAScript. Knowledge of isomorphic React is a plus. Familiarity with Modern front-end build pipelines and tools. Experience with Data Structure libraries (e.g Immutable.js). Working Knowledge of GitHub. Experience with REST API’s. Knowledge of Modern Authorization mechanisms, such as JSON Web Token and OAuth. The desire to jump into Full Stack Development when necessary\"\n}, {\n  \"company\": \"Netflix\",\n  \"description\": \"web developer\",\n  \"requirements\": \"Strong Proficiency in Javascript, including DOM Manipulation and the JavaScript Object Model. Thorough understanding of React.js and its core principles. Familiarity with newer specifications of ECMAScript. Knowledge of isomorphic React is a plus. Familiarity with Modern front-end build pipelines and tools. Experience with Data Structure libraries (e.g Immutable.js). Working Knowledge of GitHub. Experience with REST API’s. Knowledge of Modern Authorization mechanisms, such as JSON Web Token and OAuth. The desire to jump into Full Stack Development when necessary\"\n}]; // $.ajax({\n//   method: \"GET\",\n//   url: \"/allemploy\"\n// })\n//   // With that done, add the note information to the page\n//   .then(function(data) {\n//     console.log(data);\n//   });\n\nvar JobCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(JobCard, _Component);\n\n  function JobCard() {\n    var _this;\n\n    _classCallCheck(this, JobCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(JobCard).call(this));\n    _this.state = {\n      cards: IMAGE_URLS\n    };\n    return _this;\n  }\n\n  _createClass(JobCard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('/allemploy').then(function (response) {\n        console.log(response.data);\n\n        _this2.setState({\n          cards: response.data\n        });\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"shiftCard\",\n    value: function shiftCard() {\n      var cards = this.state.cards.slice();\n      cards.splice(0, 1);\n      this.setState({\n        cards: cards\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(NavBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(CardDeck, {\n        cards: this.state.cards,\n        shiftCard: this.shiftCard.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(Buttons, {\n        cards: this.state.cards,\n        shiftCard: this.shiftCard.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return JobCard;\n}(Component);\n\nexport { JobCard as default };","map":{"version":3,"sources":["/Users/michaelnunzio/Desktop/finalProject/final-app/client/src/component/jobCards/JobCard.js"],"names":["React","Component","Buttons","CardDeck","Title","axios","NavBar","IMAGE_URLS","JobCard","state","cards","get","then","response","console","log","data","setState","catch","error","slice","splice","shiftCard","bind"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAIA,IAAMC,UAAU,GAAG,CACjB;AACA,aAAW,QADX;AAEA,iBAAe,eAFf;AAGA,kBAAgB;AAHhB,CADiB,EAMb;AACE,aAAW,QADb;AAEE,iBAAe,eAFjB;AAGE,kBAAgB;AAHlB,CANa,EAWP;AACE,aAAW,SADb;AAEE,iBAAe,eAFjB;AAGE,kBAAgB;AAHlB,CAXO,EAgBD;AACE,aAAW,SADb;AAEE,iBAAe,eAFjB;AAGE,kBAAgB;AAHlB,CAhBC,CAAnB,C,CAsBwB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;IASHC,O;;;;;AACnB,qBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAEH;AADI,KAAb;AAFY;AAKb;;;;wCAGmB;AAAA;;AAClBF,MAAAA,KAAK,CAACM,GAAN,CAAU,YAAV,EACKC,IADL,CACU,UAACC,QAAD,EAAc;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;;AACE,QAAA,MAAI,CAACC,QAAL,CAAc;AACVP,UAAAA,KAAK,EAAEG,QAAQ,CAACG;AADN,SAAd;AAGH,OANL,EAMOE,KANP,CAMa,UAACC,KAAD,EAAW;AAChBL,QAAAA,OAAO,CAACK,KAAR,CAAcA,KAAd;AACH,OARL;AASF;;;gCAYY;AACV,UAAIT,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBU,KAAjB,EAAZ;AACAV,MAAAA,KAAK,CAACW,MAAN,CAAa,CAAb,EAAe,CAAf;AACA,WAAKJ,QAAL,CAAc;AAACP,QAAAA,KAAK,EAALA;AAAD,OAAd;AACD;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEA;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAA5B;AAAmC,QAAA,SAAS,EAAE,KAAKY,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAE,KAAKd,KAAL,CAAWC,KAA3B;AAAkC,QAAA,SAAS,EAAE,KAAKY,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAFA,CADF;AAUH;;;;EAhDoCtB,S;;SAAhBO,O","sourcesContent":["import React, { Component } from 'react'\nimport Buttons from './Buttons'\nimport CardDeck from './CardDeck'\nimport Title from \"./Title\"\nimport axios from 'axios'\nimport NavBar from \"../navbar/navbar\"\n\n\n\nconst IMAGE_URLS = [\n  {\n  \"company\": \"Amazon\", \n  \"description\": \"web developer\", \n  \"requirements\": \"Strong Proficiency in Javascript, including DOM Manipulation and the JavaScript Object Model. Thorough understanding of React.js and its core principles. Familiarity with newer specifications of ECMAScript. Knowledge of isomorphic React is a plus. Familiarity with Modern front-end build pipelines and tools. Experience with Data Structure libraries (e.g Immutable.js). Working Knowledge of GitHub. Experience with REST API’s. Knowledge of Modern Authorization mechanisms, such as JSON Web Token and OAuth. The desire to jump into Full Stack Development when necessary\"\n      },\n      {\n        \"company\": \"Google\", \n        \"description\": \"web developer\", \n        \"requirements\": \"Strong Proficiency in Javascript, including DOM Manipulation and the JavaScript Object Model. Thorough understanding of React.js and its core principles. Familiarity with newer specifications of ECMAScript. Knowledge of isomorphic React is a plus. Familiarity with Modern front-end build pipelines and tools. Experience with Data Structure libraries (e.g Immutable.js). Working Knowledge of GitHub. Experience with REST API’s. Knowledge of Modern Authorization mechanisms, such as JSON Web Token and OAuth. The desire to jump into Full Stack Development when necessary\"\n            },\n            {\n              \"company\": \"Walmart\", \n              \"description\": \"web developer\", \n              \"requirements\": \"Strong Proficiency in Javascript, including DOM Manipulation and the JavaScript Object Model. Thorough understanding of React.js and its core principles. Familiarity with newer specifications of ECMAScript. Knowledge of isomorphic React is a plus. Familiarity with Modern front-end build pipelines and tools. Experience with Data Structure libraries (e.g Immutable.js). Working Knowledge of GitHub. Experience with REST API’s. Knowledge of Modern Authorization mechanisms, such as JSON Web Token and OAuth. The desire to jump into Full Stack Development when necessary\"\n                  },\n                  {\n                    \"company\": \"Netflix\", \n                    \"description\": \"web developer\", \n                    \"requirements\": \"Strong Proficiency in Javascript, including DOM Manipulation and the JavaScript Object Model. Thorough understanding of React.js and its core principles. Familiarity with newer specifications of ECMAScript. Knowledge of isomorphic React is a plus. Familiarity with Modern front-end build pipelines and tools. Experience with Data Structure libraries (e.g Immutable.js). Working Knowledge of GitHub. Experience with REST API’s. Knowledge of Modern Authorization mechanisms, such as JSON Web Token and OAuth. The desire to jump into Full Stack Development when necessary\"\n                        }]\n\n                        // $.ajax({\n                        //   method: \"GET\",\n                        //   url: \"/allemploy\"\n                        // })\n                        //   // With that done, add the note information to the page\n                        //   .then(function(data) {\n                        //     console.log(data);\n                           \n                        //   });\n\n\n\n\n\n\n\n\nexport default class JobCard extends Component {\n  constructor() {\n    super()\n    this.state = {\n      cards: IMAGE_URLS\n    }\n  }\n  \n\n  componentDidMount() {\n    axios.get('/allemploy')\n        .then((response) => {\n          console.log(response.data)\n            this.setState({\n                cards: response.data\n            });\n        }).catch((error) => {\n            console.error(error);\n        });\n }\n\n\n\n\n\n \n\n\n\n\n  \n  shiftCard() {\n    let cards = this.state.cards.slice()\n    cards.splice(0,1)\n    this.setState({cards})\n  }\n\n  render() {\n    return (\n      <div>\n        <NavBar/>\n      <div className=\"App\">\n        <CardDeck cards={this.state.cards} shiftCard={this.shiftCard.bind(this)} />\n        <Buttons cards={this.state.cards} shiftCard={this.shiftCard.bind(this)} />\n      </div>\n      </div>\n    )\n  \n}\n\n}"]},"metadata":{},"sourceType":"module"}